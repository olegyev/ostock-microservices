version: '2.1'
services:
  database:
    image: postgres:16rc1-bullseye
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "ostock_dev"
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./sql/data.sql:/docker-entrypoint-initdb.d/2-data.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      backend:
        aliases:
          - "database"

  configserver:
    image: ostock/configserver:0.0.1-SNAPSHOT
    ports:
      - "8071:8071"
    environment:
      ENCRYPT_KEY: "IAMSYMMETRIC"
    networks:
      backend:
        aliases:
          - "configserver"

  eurekaserver:
    image: ostock/eureka:0.0.1-SNAPSHOT
    ports:
      - "8070:8070"
    environment:
      SPRING_PROFILES_ACTIVE: "dev"
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071"
      EUREKA_INSTANCE_HOSTNAME: "eurekaserver"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"

  licensingservice:
    image: ostock/licensing-service:0.0.1-SNAPSHOT
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: "dev"
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://database:5432/ostock_dev"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "licensingservice"

networks:
  backend:
    driver: bridge